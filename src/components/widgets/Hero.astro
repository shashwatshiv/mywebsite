---
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';
import { socialMediaData } from '~/navigation';
import { Icon } from 'astro-icon/components';
import type { Hero as Props } from '~/types';
import TypeIt from 'typeit-react';

const socialLinks = socialMediaData.socialLinks;
const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,
  actions = await Astro.slots.render('actions'),
  image = await Astro.slots.render('image'),
  id,
  bg = await Astro.slots.render('bg'),
} = Astro.props;

// Tech stack icons for floating background
const techIcons = [
  'vscode-icons:file-type-reactjs',
  'vscode-icons:file-type-typescript-official',
  'vscode-icons:file-type-node',
  'vscode-icons:file-type-js-official',
  'vscode-icons:file-type-python',
  'vscode-icons:file-type-mongo',
  'vscode-icons:file-type-pgsql',
  'vscode-icons:file-type-docker2',
  'vscode-icons:file-type-html',
  'vscode-icons:file-type-css',
  'vscode-icons:file-type-tailwind',
  'vscode-icons:file-type-git',
];
---

<section class="relative md:-mt-[76px] not-prose overflow-hidden" {...id ? { id } : {}}>
  <div class="absolute inset-0 pointer-events-none" aria-hidden="true">
    <!-- Floating Tech Icons -->
    <div class="tech-icons-container">
      {
        techIcons.map((icon) => (
          <div class="tech-icon floating">
            <Icon name={icon} class="w-12 h-12 opacity-95 dark:opacity-60" />
          </div>
        ))
      }
    </div>
    <slot name="bg">
      {bg ? <Fragment set:html={bg} /> : null}
    </slot>
  </div>
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6">
    <div class="pt-0 md:pt-[76px] pointer-events-none"></div>
    <div class="py-2 md:py-20 lg:py-0 lg:flex lg:items-center lg:h-screen lg:gap-8">
      <div class="basis-2/3 text-center lg:text-left pb-10 md:pb-16 mx-auto">
        {
          tagline && (
            <p
              class="text-base text-secondary dark:text-blue-200 font-bold tracking-wide uppercase intersect-once motion-safe:md:intersect:animate-fade motion-safe:md:opacity-0 intersect-quarter"
              set:html={tagline}
            />
          )
        }
        {
          title && (
            <h1
              class="text-5xl md:text-6xl text  font-bold  leading-tighter tracking-tighter mb-4 font-heading dark:text-gray-200 intersect-once motion-safe:md:intersect:animate-fade motion-safe:md:opacity-0 intersect-quarter"
              set:html={title}
            />
          )
        }
        <div class="max-w-3xl mx-auto lg:max-w-none">
          {
            subtitle && (
              <div class="text-xl">
                {' '}
                <TypeIt client:load options={{ speed: 30 }}>
                  {subtitle}
                </TypeIt>
              </div>
            )
          }
          <div class="lg:hidden">
            {
              image && (
                <div class=" w-2/5 relative m-auto max-w-5xl intersect-once intercept-no-queue motion-safe:md:intersect:animate-fade motion-safe:md:opacity-0 intersect-quarter">
                  {typeof image === 'string' ? (
                    <Fragment set:html={image} />
                  ) : (
                    <Image
                      class="mx-auto rounded-md "
                      widths={[400, 768, 1024, 2040]}
                      sizes="(max-width: 767px) 400px, (max-width: 1023px) 768px, (max-width: 2039px) 1024px, 2040px"
                      loading="eager"
                      width={400}
                      height={400}
                      {...image}
                    />
                  )}
                </div>
              )
            }
          </div>
          <div class="">
            {
              socialLinks?.length ? (
                <ul class="flex my-4 justify-center  xl:justify-start mx-auto">
                  {socialLinks.map(({ ariaLabel, href, icon, target }) => (
                    <li class="mx-2">
                      <a
                        class=" dark:text-gray-400 transition ease-in hover:bg-gray-100 dark:hover:bg-gray-800 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center"
                        aria-label={ariaLabel}
                        href={href}
                        target={target}>
                        {icon && <Icon name={icon} class="w-7 h-7" />}
                      </a>
                    </li>
                  ))}
                </ul>
              ) : (
                ''
              )
            }
          </div>

          {
            actions && (
              <div class="max-w-xs sm:max-w-md m-auto flex flex-nowrap flex-col sm:flex-row sm:justify-center gap-4 lg:justify-start lg:m-0 lg:max-w-7xl intersect-once motion-safe:md:intersect:animate-fade motion-safe:md:opacity-0 intersect-quarter">
                {Array.isArray(actions) ? (
                  actions.map((action) => (
                    <div class="flex w-full sm:w-auto">
                      <Button {...(action || {})} class="w-full sm:mb-0" />
                    </div>
                  ))
                ) : (
                  <Fragment set:html={actions} />
                )}
              </div>
            )
          }
        </div>
      </div>
      <div class="basis-1/3">
        {
          image && (
            <div class="relative m-auto  intersect-once intercept-no-queue motion-safe:md:intersect:animate-fade motion-safe:md:opacity-0 intersect-quarter">
              {typeof image === 'string' ? (
                <Fragment set:html={image} />
              ) : (
                <Image
                  class="mx-auto rounded-md hidden lg:block md:w-full hover:scale-105 transition-transform duration-300"
                  widths={[400, 600, 800]}
                  sizes="(max-width: 767px) 400px, (max-width: 1023px) 600px, 800px"
                  loading="eager"
                  width={250}
                  height={400}
                  {...image}
                />
              )}
            </div>
          )
        }
      </div>
    </div>
  </div>
</section>

<style>
  /* Floating Tech Icons */
  .tech-icons-container {
    position: absolute;
    inset: 0;
    overflow: hidden;
    pointer-events: none;
  }

  .tech-icon {
    position: absolute;
    animation: float 20s linear infinite;
  }

  @keyframes float {
    0% {
      transform: translate(0, 0) rotate(0deg);
      opacity: 0;
    }
    25% {
      opacity: 0.7;
    }
    75% {
      opacity: 0.7;
    }
    100% {
      transform: translate(var(--translate-x, 100px), var(--translate-y, 100px)) rotate(360deg);
      opacity: 0;
    }
  }

  /* Generate random positions for tech icons */
  .tech-icon:nth-child(1) {
    --translate-x: 100px;
    --translate-y: -150px;
    animation-delay: 0s;
    left: 10%;
    top: 20%;
  }
  .tech-icon:nth-child(2) {
    --translate-x: -120px;
    --translate-y: 100px;
    animation-delay: -5s;
    left: 30%;
    top: 50%;
  }
  .tech-icon:nth-child(3) {
    --translate-x: 150px;
    --translate-y: 120px;
    animation-delay: -10s;
    left: 50%;
    top: 30%;
  }
  .tech-icon:nth-child(4) {
    --translate-x: -100px;
    --translate-y: -120px;
    animation-delay: -15s;
    left: 70%;
    top: 60%;
  }
  .tech-icon:nth-child(5) {
    --translate-x: 120px;
    --translate-y: 150px;
    animation-delay: -7s;
    left: 20%;
    top: 40%;
  }
  .tech-icon:nth-child(6) {
    --translate-x: -150px;
    --translate-y: -100px;
    animation-delay: -12s;
    left: 60%;
    top: 20%;
  }
  .tech-icon:nth-child(7) {
    --translate-x: 100px;
    --translate-y: 120px;
    animation-delay: -17s;
    left: 40%;
    top: 70%;
  }
  .tech-icon:nth-child(8) {
    --translate-x: -120px;
    --translate-y: -150px;
    animation-delay: -3s;
    left: 80%;
    top: 40%;
  }
  .tech-icon:nth-child(9) {
    --translate-x: 130px;
    --translate-y: -130px;
    animation-delay: -8s;
    left: 15%;
    top: 60%;
  }
  .tech-icon:nth-child(10) {
    --translate-x: -140px;
    --translate-y: 140px;
    animation-delay: -13s;
    left: 85%;
    top: 25%;
  }
  .tech-icon:nth-child(11) {
    --translate-x: 110px;
    --translate-y: -110px;
    animation-delay: -18s;
    left: 45%;
    top: 55%;
  }
  .tech-icon:nth-child(12) {
    --translate-x: -130px;
    --translate-y: 130px;
    animation-delay: -2s;
    left: 75%;
    top: 15%;
  }
</style>
