---
import { Icon } from 'astro-icon/components';
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';

interface Props {
  title: string;
  description: string;
  techStack: string[];
  image: {
    src: string;
    alt: string;
  };
  sourceLink: string;
  demoLink: string;
}

const { title, description, techStack, image, sourceLink, demoLink } = Astro.props;

// Map tech names to VSCode icons
const techIconMap: Record<string, string> = {
  'React.js': 'vscode-icons:file-type-reactjs',
  'Next.js': 'vscode-icons:file-type-next',
  TypeScript: 'vscode-icons:file-type-typescript-official',
  JavaScript: 'vscode-icons:file-type-js-official',
  'Node.js': 'vscode-icons:file-type-node',
  Python: 'vscode-icons:file-type-python',
  PostgreSQL: 'vscode-icons:file-type-pgsql',
  MongoDB: 'vscode-icons:file-type-mongo',
  Prisma: 'vscode-icons:file-type-prisma',
  Docker: 'vscode-icons:file-type-docker2',
  AWS: 'vscode-icons:file-type-aws',
  Tailwind: 'vscode-icons:file-type-tailwind',
  CSS: 'vscode-icons:file-type-css',
  HTML: 'vscode-icons:file-type-html',
  Express: 'vscode-icons:file-type-node',
  Firebase: 'vscode-icons:file-type-firebase',
  Turborepo: 'vscode-icons:file-type-turbo',
" Hono.js": 'vscode-icons:file-'
};
---

<div
  class="flex flex-col bg-white dark:bg-slate-900 rounded-xl shadow-lg overflow-hidden border border-gray-200 dark:border-slate-800"
>
  <div class="relative w-full pt-[56.25%]">
    <Image
      src={image.src}
      alt={image.alt}
      class="absolute top-0 left-0 w-full h-full object-cover"
      width={640}
      height={360}
      loading="lazy"
      decoding="async"
    />
  </div>

  <div class="p-6 flex flex-col flex-grow">
    <h3 class="text-xl font-bold tracking-tight dark:text-white mb-3">{title}</h3>

    <p class="text-gray-700 dark:text-gray-300 text-sm mb-4 flex-grow line-clamp-2">
      {description}
    </p>

    <div class="flex gap-3 mb-4">
      <Button variant="secondary" href={sourceLink} target="_blank" class="flex-1 text-sm py-2">
        <Icon name="tabler:brand-github" class="w-4 h-4 mr-1" /> Source
      </Button>
      <Button variant="primary" href={demoLink} target="_blank" class="flex-1 text-sm py-2">
        <Icon name="tabler:external-link" class="w-4 h-4 mr-1" /> Demo
      </Button>
    </div>

    <div class="flex flex-wrap gap-2">
      {
        techStack.map((tech) => (
          <div class="inline-flex items-center px-2.5 py-1.5 rounded-md text-xs font-medium bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200">
            {techIconMap[tech] && <Icon name={techIconMap[tech]} class="w-4 h-4 mr-1" />}
            {tech}
          </div>
        ))
      }
    </div>
  </div>
</div>
